<!--
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Runtime.Widget.Button">


<style>
.widget_button{
	color: var(--widget-color-text);
	background-color: var(--widget-color-default);
	border: var(--widget-border-width) var(--widget-color-border) solid;
	padding: var(--widget-button-padding-y) var(--widget-button-padding-x);
	outline: 0;
	line-height: normal;
	cursor: pointer;
}
.widget_button:active{
	box-shadow: inset 0px 2px 5px 0px rgba(0,0,0,0.25);
}
.widget_button--small{
	padding: var(--widget-button-padding-small-y) var(--widget-button-padding-small-x);
}
.widget_button--large{
	padding: var(--widget-button-large-small-y) var(--widget-button-large-small-x);
}
.widget_button--primary{
	color: var(--widget-color-primary-text);
	background-color: var(--widget-color-primary);
	border-color: var(--widget-color-primary);
}
.widget_button--danger{
	color: var(--widget-color-danger-text);
	background-color: var(--widget-color-danger);
	border-color: var(--widget-color-danger);
}
.widget_button--success{
	color: var(--widget-color-success-text);
	background-color: var(--widget-color-success);
	border-color: var(--widget-color-success);
}
</style>


<template name="render">
	<button type="button" class="widget_button" class={{ this.getStyles() }}
		@event:onClick={{ this.onClick }}
	>
		%render this.renderSlot("default");
	</button>
</template>


<script>

props Collection<string> styles = [];


/**
 * Returns styles
 */
void getStyles() => this.styles.join(" ");


/**
 * Click button event
 */
void onClick()
{
	if (this.model) this.model.onClick(this.data);
}

</script>

</class>