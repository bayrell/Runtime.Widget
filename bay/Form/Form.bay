<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Runtime.Widget.Form.Form">

<use name="Runtime.Web.ApiResult" />
<use name="Runtime.Web.Annotations.Param" />
<use name="Runtime.Widget.Button" component="true" />
<use name="Runtime.Widget.Input" component="true" />
<use name="Runtime.Widget.RowButtons" component="true" />
<use name="Runtime.Widget.TextArea" component="true" />
<use name="Runtime.Widget.WidgetResult" component="true" />
<use name="Runtime.Widget.WidgetResultModel" />


<style>
.widget_form{
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
	.widget_form__field_row{
		margin-bottom: 10px;
	}
	.widget_form__field_label{
		padding-bottom: 5px;
	}
	.widget_form__field_error{
		color: var(--widget-color-danger);
		margin-top: var(--widget-space);
	}
	.widget_form__field_error--hide{
		display: none;
	}
	%(RowButtons)widget_form__bottom_buttons{
		justify-content: center;
	}
}
</style>


<template name="renderTitle">
	%render this.renderSlot("title");
</template>


<template name="renderField" args="Dict field">
	%set string field_name = field.get("name");
	%set string field_model = field.get("model", null);
	%set string field_component = field.get("component");
	%set string field_props = field.get("props", {});
	%set var value = this.model.getItemValue(field_name);
	%if (field_component != null)
	{
		<{field_component}
			value={{ value }}
			name={{ field_name }}
			@model={{ field_model }}
			@event:onValueChange={{
				void (string value) use (field_name) =>
					this.model.onFieldChange(field_name, value)
			}}
			data={{{
				"field_name": field_name,
				"form": this.model,
			}}}
			...field_props
		/>
	}
	%else
	{
		%render this.renderWidget(field_model, {
			"value": value,
			"name": field_name,
			"data": {
				"field_name": field_name,
				"form": this.model,
				"value": value,
			}
		});
	}
</template>


<template name="renderFieldResult" args="Dict field">
	%set string field_name = field.get("name");
	%set Collection<string> field_error = this.model.getFieldResult(field_name);
	%if (field_error.count() == 0)
	{
		<div class="widget_form__field_error widget_form__field_error--hide"
			data-name={{ field_name }} @key="result1"></div>
	}
	%else
	{
		<div class="widget_form__field_error" data-name={{ field_name }} @key="result2">
			%for (int i=0; i<field_error.count(); i++)
			{
				<div>{{ field_error.get(i) }}</div>
			}
		</div>
	}
</template>


<template name="renderFieldRow" args="Dict field">
	%set string field_name = field.get("name");
	<div class="widget_form__field_row" data-name={{ field_name }} @key={{ field_name }}>
		%if (field.has("label"))
		{
			<div class="widget_form__field_label">
				{{ field.get("label") }}
			</div>
		}
		%render this.renderField(field);
		%render this.renderFieldResult(field);
	</div>
</template>


<template name="renderFields">
	<div class="widget_form__fields">
		%if (this.model)
		{
			%for (int i=0; i<this.model.fields.count(); i++)
			{
				%render this.renderFieldRow(this.model.fields.get(i));
			}
		}
	</div>
</template>


<template name="renderBottomButtons">
	%if (this.model and this.model.bottom_buttons.count() > 0)
	{
		%render this.renderWidget(this.model.bottom_buttons);
	}
</template>


<template name="renderResult">
	%if (this.model)
	{
		%render this.renderWidget(this.model.result);
	}
</template>


<template>
	<div class="widget_form" class={{ this.class }}>
		%render this.renderTitle();
		%render this.renderFields();
		%render this.renderBottomButtons();
		%render this.renderResult();
	</div>
</template>


</class>