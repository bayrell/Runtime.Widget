<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Runtime.Widget.Form.FormGroupFields">


<style>
.widget_form_group__label{
	font-weight: bold;
	text-align: center;
	margin-bottom: var(--widget-space);
}
.widget_form_group__row{
	margin-bottom: calc(var(--widget-space) * 3);
}
.widget_form_group__row_label{
	display: block;
	font-weight: bold;
	margin-bottom: var(--widget-space);
}
.widget_form_group__field_error{
	color: var(--widget-color-danger);
	margin-top: var(--widget-space);
}
.widget_form_group__field_error--hide{
	display: none;
}
</style>


<template name="renderField" args="Dict field">
	%set string field_name = field.get("name");
	%set string field_component = field.get("component", "Runtime.Widget.Input");
	%set string field_model = field.get("model", null);
	%set string props = field.get("props", {});
	%set var value = "";
	%if (this.model.storage)
	{
		%set value = this.model.getItemValue(this.model.storage.getItem(), field_name);
	}
	
	%if (field_component != null)
	{
		<{field_component}
			value={{ value }}
			name={{ field_name }}
			@model={{ field_model }}
			@event:onValueChange={{
				void (string value) use (field_name) =>
					this.model.onFieldChange(field_name, value)
			}}
			data={{{
				"field_name": field_name,
			}}}
			...props
		/>
	}
	%else
	{
		%render this.renderWidget(field_model, {
			"data": {
				"value": value,
			}
		});
	}
	
</template>


<template name="renderRow" args="Dict field">
	
	%set string field_name = field.get("name");
	%set fn field_condition = field.get("condition");
	%set bool is_show = true;
	
	%if (field_condition)
	{
		%set is_show = rtl::apply(field_condition);
	}
	
	%if (is_show)
	{
		<div class="widget_form_group__row" @key={{ field_name }}>
			
			%set string field_label = field.get("label");
			%if (field_label)
			{
				<label class="widget_form_group__row_label">{{ field_label }}</label>
			}
			
			%render this.renderField(field);
			
			%set Collection<string> field_error = this.model.getFieldResult(field_name);
			%if (field_error.count() == 0)
			{
				<div class="widget_form_group__field_error widget_form_group__field_error--hide"
					data-name={{ field_name }} @key="result1"></div>
			}
			%else
			{
				<div class="widget_form_group__field_error" data-name={{ field_name }} @key="result2">
					%for (int i=0; i<field_error.count(); i++)
					{
						<div>{{ field_error.get(i) }}</div>
					}
				</div>
			}
			
		</div>
	}
</template>


<template>
	<div class="widget_form_group">
		%if (this.label)
		{
			<div class="widget_form_group__label">{{ this.label }}</div>
		}
		%if (this.fields)
		{
			%for (int i=0; i<this.fields.count(); i++)
			{
				%set Dict field = this.fields.get(i);
				%render this.renderRow(field);
			}
		}
	</div>
</template>


<script>
props string name = "";
props string label = "";
props Collection fields = null;

/**
 * Change value
 */
void onValueChange(string field_name, string value)
{
	this.emit("onValueChange", [field_name, value]);
	/* this.model.onFieldChange(field_name, value); */
}

</script>

</class>