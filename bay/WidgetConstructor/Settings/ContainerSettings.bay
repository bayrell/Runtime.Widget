/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.WidgetConstructor.Settings;

use BayLang.Constructor.Frontend.Annotations.WidgetSettingsInterface;
use BayLang.Constructor.Frontend.Editor.Parameter;
use BayLang.Constructor.Frontend.Editor.ParameterComponent;


class ContainerSettings implements WidgetSettingsInterface
{
	/**
	 * Returns widgets list
	 */
	string getName() => "Runtime.Widget.Container";
	
	
	/**
	 * Returns params
	 */
	Collection<Parameter> getParams() =>
	[
		new ParameterComponent
		{
			"name": "flex",
			"label": "Flex",
			"component": "Runtime.Widget.Select",
			"props": {
				"options": [
					{"key": "false", "value": "No"},
					{"key": "true", "value": "Yes"},
				],
			}
		},
		new ParameterComponent
		{
			"name": "align_items",
			"label": "Align items",
			"component": "Runtime.Widget.Select",
			"props": {
				"options": [
					{"key": "baseline", "value": "baseline"},
					{"key": "center", "value": "center"},
					{"key": "end", "value": "end"},
					{"key": "flex-end", "value": "flex-end"},
					{"key": "flex-start", "value": "flex-start"},
					{"key": "start", "value": "start"},
					{"key": "stretch", "value": "stretch"},
					{"key": "revert", "value": "revert"},
				],
			}
		},
		new ParameterComponent
		{
			"name": "justify_content",
			"label": "Justify content",
			"component": "Runtime.Widget.Select",
			"props": {
				"options": [
					{"key": "left", "value": "left"},
					{"key": "center", "value": "center"},
					{"key": "right", "value": "right"},
					{"key": "space-around", "value": "space-around"},
					{"key": "space-between", "value": "space-between"},
					{"key": "start", "value": "start"},
					{"key": "stretch", "value": "stretch"},
					{"key": "end", "value": "end"},
				],
			}
		},
		new ParameterComponent
		{
			"name": "flex_wrap",
			"label": "Flex wrap",
			"component": "Runtime.Widget.Select",
			"props": {
				"options": [
					{"key": "nowrap", "value": "nowrap"},
					{"key": "wrap", "value": "wrap"},
				],
			}
		}
	];
	
	
	/**
	 * Returns default template
	 */
	Dict<fn> getDefaultTemplate() =>
	{
		"default": Dict () =>
		{
			"template": rs::join("\n", [
				"<style>",
				"padding-top: 10px;",
				"padding-bottom: 10px;",
				"padding-left: 0px;",
				"padding-right: 0px;",
				"</style>"
			])
		},
	};
}