/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.WidgetConstructor.Settings;

use BayLang.Constructor.Frontend.Editor.Parameters.ParameterComponent;
use BayLang.Constructor.WidgetPage.Annotations.WidgetSettingsInterface;
use Runtime.Entity.Factory;


class LinkSettings implements WidgetSettingsInterface
{
	/**
	 * Returns widgets list
	 */
	string getName() => "Runtime.Widget.Link";
	
	
	/**
	 * Returns short name
	 */
	string getShortName() => "link";
	
	
	/**
	 * Can drag
	 */
	bool canDrag(var widget, string kind)
	{
		if (kind == "into") return false;
		return true;
	}
	
	
	/**
	 * Returns params
	 */
	Collection<Factory> getParams() =>
	[
		new Factory
		(
			classof ParameterComponent,
			{
				"name": "href",
				"label": "Href",
				"component": "Runtime.Widget.Input",
			}
		),
		new Factory
		(
			classof ParameterComponent,
			{
				"name": "text",
				"label": "Text",
				"component": "Runtime.Widget.Input",
			}
		),
		new Factory
		(
			classof ParameterComponent,
			{
				"name": "target",
				"label": "Target",
				"component": "Runtime.Widget.Select",
				"default": "_self",
				"props": {
					"options": [
						{"key": "_self", "value": "self"},
						{"key": "_blank", "value": "blank"},
					],
				}
			}
		),
	];
	
	
	/**
	 * Returns default template
	 */
	Dict<fn> getDefaultTemplate() =>
	{
	};
}