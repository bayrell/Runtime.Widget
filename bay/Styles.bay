/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget;

use Runtime.BaseObject;
use Runtime.Web.BaseModel;
use Runtime.Widget.Button;


class Styles extends BaseModel
{
	string prefix = "";
	Vector<string> items = [];
	
	
	/**
	 * Constructor
	 */
	void constructor(Dict params = null)
	{
		parent(params);
		if (params)
		{
			if (params.has("prefix")) this.prefix = params.get("prefix");
			if (params.has("items")) this.addStyles(params.get("items"));
		}
	}
	
	
	/**
	 * Add style
	 */
	void add(string s)
	{
		if (s == "") return;
		if (s[0] == "@") this.items.append(rs::substr(s, 1));
		else this.items.append(this.prefix ~ "--" ~ s);
	}
	
	
	/**
	 * Add styles
	 */
	void addStyles(Collection<string> styles)
	{
		if (styles.count() == 0) return;
		for (int i=0; i<styles.count(); i++)
		{
			this.add(styles.get(i));
		}
	}
	
	
	/**
	 * Add style
	 */
	string join(string s) => this.items.join(s);
	
}
