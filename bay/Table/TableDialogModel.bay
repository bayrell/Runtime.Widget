/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Table;

use Runtime.Callback;
use Runtime.Exceptions.RuntimeException;
use Runtime.Web.RenderListModel;
use Runtime.Widget.ButtonModel;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.RowButtons;
use Runtime.Widget.RowButtonsModel;
use Runtime.Widget.Table.DeleteDialogModel;
use Runtime.Widget.Table.SaveDialogModel;
use Runtime.Widget.Table.TableModel;


class TableDialogModel extends TableModel
{
	FormModel form;
	
	
	/**
	 * Create form
	 */
	FormModel createForm() => this.addWidget(
		classof FormModel,
		{
			"storage": this.createDataStorage(),
		}
	);
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		/* Create form */
		this.form = this.createForm();
		
		parent(params);
		
		/* Create save wiget */
		this.render_list.addItem(
			this.addWidget(
				classof SaveDialogModel,
				{
					"form": this.form,
					"widget_name": "save_dialog",
				}
			)
		);
		
		/* Create delete widget */
		this.render_list.addItem(
			this.addWidget(
				classof DeleteDialogModel,
				{
					"form": this.form,
					"widget_name": "delete_dialog",
				}
			)
		);
		
		/* Add button */
		this.top_buttons.addWidget(
			classof ButtonModel,
			{
				"content": "Add",
				"widget_name": "add_button",
				"styles": [
					"success",
				],
				"events": {
					"onClick": new Callback(this.getWidget("save_dialog"), "onClick"),
				},
			}
		);
		
		/* Setup row buttons */
		this.row_buttons.getWidget("edit_button").events
			.add("onClick", new Callback(this.getWidget("save_dialog"), "onClick"))
		;
		this.row_buttons.getWidget("delete_button").events
			.add("onClick", new Callback(this.getWidget("delete_dialog"), "onClick"))
		;
	}
}