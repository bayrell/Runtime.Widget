/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Table;

use Runtime.Web.Messages.ClickMessage;
use Runtime.Widget.RowButtonsModel;


class TableRowButtonsModel extends RowButtonsModel
{
	string widget_name = "row_buttons";
	
	
	/**
	 * Return params
	 */
	Dict getButtonParams(Dict params, string action)
	{
		if (not params.has(action))
		{
			return {
				"show": true,
				"button": {},
			};
		}
		
		bool show_button = true;
		Dict params_button = params.has(action) ? params.get(action) : null;
		if (params_button instanceof Dict)
		{
			if (params_button.has("show"))
			{
				show_button = params_button.get("show");
			}
		}
		else if (params.has(action))
		{
			show_button = params.get(action);
		}
		
		return {
			"show": show_button,
			"params": params_button,
		};
	}
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		Dict params_edit_button = this.getButtonParams(params, "edit");
		Dict params_delete_button = this.getButtonParams(params, "delete");
		
		/* Edit button */
		if (params_edit_button.get("show"))
		{
			Dict button = {
				"content": "Edit",
				"widget_name": "edit_button",
				"styles": [
					"default",
					"small",
				]
			};
			this.addButton(button.concat(params_edit_button.get("params")));
		}
		
		/* Delete button */
		if (params_delete_button.get("show"))
		{
			Dict button = {
				"content": "Delete",
				"widget_name": "delete_button",
				"styles": [
					"danger",
					"small",
				],
			};
			this.addButton(button.concat(params_delete_button.get("params")));
		}
		
		parent(params);
	}
	
	
	/**
	 * Buttons click
	 */
	void onButtonClick(ClickMessage message)
	{
		this.emit(message);
		this.parent_widget.onRowButtonClick(message);
	}
}