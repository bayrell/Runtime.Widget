/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Table;

use Runtime.BaseObject;
use Runtime.Callback;
use Runtime.Serializer;
use Runtime.Web.ApiResult;
use Runtime.Web.BaseModel;
use Runtime.Widget.Button;
use Runtime.Widget.ButtonModel;
use Runtime.Widget.Dialog.ConfirmDialogModel;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.SaveDialog;
use Runtime.Widget.Table.TableModel;


class SaveDialogModel extends ConfirmDialogModel
{
	string action = "";
	string widget_name = "save_dialog";
	string component = classof SaveDialog;
	FormModel add_form;
	FormModel edit_form;
	TableModel table;
	
	
	/**
	 * Init widget params
	 */
	void initParams(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("table")) this.table = params.get("table");
		if (params.has("add_form")) this.add_form = params.get("add_form");
		if (params.has("edit_form")) this.edit_form = params.get("edit_form");
	}
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
	}
	
	
	/**
	 * Show add
	 */
	void showAdd()
	{
		this.action = "add";
		this.title = this.table.getTitle({
			"action": "add",
		});
		this.add_form.clear();
		
		/* Change confirm button */
		ButtonModel confirm_button = this.buttons.getWidget("confirm_button");
		confirm_button.content = "Add";
		confirm_button.styles = ["success"];
		
		/* Show dialog */
		this.show();
	}
	
	
	/**
	 * Show edit
	 */
	void showEdit(Dict item)
	{
		item = Serializer::copy(item);
		this.action = "edit";
		this.title = this.table.getTitle({
			"action": "edit",
			"item": item,
		});
		this.edit_form.clear();
		this.edit_form.setItem(item);
		
		/* Change confirm button */
		ButtonModel confirm_button = this.buttons.getWidget("confirm_button");
		confirm_button.content = "Save";
		confirm_button.styles = ["success"];
		
		/* Show dialog */
		this.show();
	}
	
	
	/**
	 * Confirm
	 */
	async bool confirm()
	{
		ApiResult res;
		if (this.action == "add")
		{
			res = await this.add_form.submit();
		}
		else if (this.action == "edit")
		{
			res = await this.edit_form.submit();
		}
		else
		{
			return false;
		}
		if (res.isSuccess()) return true;
		return false;
	}
}
