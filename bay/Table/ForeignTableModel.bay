/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Table;

use Runtime.ModelProxy;
use Runtime.Web.ApiResult;
use Runtime.Web.BaseRoute;
use Runtime.Web.BaseModel;
use Runtime.Web.Bus;
use Runtime.Widget.FieldInfo;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.TableModel;


struct ForeignTableModel extends TableModel
{
	string foreign_key = "";
	var foreign_value = "";
	
	
	/**
	 * Set foreign key
	 */
	TableModel setForeignKey(string foreign_key, var foreign_value) =>
		this.clone({
			"foreign_key": foreign_key,
			"foreign_value": foreign_value,
		});
	
	
	/**
	 * Set foreign value
	 */
	TableModel setForeignValue(var foreign_value) => this.clone({ "foreign_value": foreign_value });
	
	
	/**
	 * Init widget
	 */
	async static void initWidget(ModelProxy<BaseModel> widget, BaseRoute route)
	{
		/* Add form widget */
		route.addWidget(
			new FormModel{ "widget_name": "form" },
			widget
		);
	}
	
	
	/**
	 * Widget event
	 */
	async static Dict event
	(
		ModelProxy<BaseModel> page_model,
		ModelProxy<BaseModel> widget,
		string action, Dict obj
	)
	{
		if (action == static::ON_SEARCH_BEFORE)
		{
			string foreign_key = widget.data('foreign_key');
			var foreign_value = widget.data('foreign_value');
			obj <= post_data <= { foreign_key } <= foreign_value;
		}
		return obj;
	}
	
}
