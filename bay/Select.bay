<!--
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Runtime.Widget.Select">


<use name="Runtime.Core.Message" />
<use name="Runtime.Web.RenderProvider" />
<use name="Runtime.Web.Events.ChangeEvent" />
<use name="Runtime.Widget.Helper" />


<style>
.select{
	width: 100%;
	max-width: 100%;
	padding: 6px 12px;
	font-size: 1rem;
	background-color: ${ vars["button", "default", "background"] };
	border: 1px ${ vars["button", "default", "border"] } solid;
	outline: transparent;
	line-height: normal;
}
</style>


<template name="render">
	
	%set string name = (render_params != null) ? render_params.get("name", "") : "";
	%set string value = Helper::getValue(layout, model_path, render_params);
	
	<select class='select' @event:ChangeEvent="onChange" name={ name }>
	
	%set Dict selected = {};
	%set bool show_select_value = render_params["show_select_value"] |> default bool true;
	%if (show_select_value == true)
	{
		%if (value === "" or value === null)
		{
			%set selected = { "selected": "selected" };
		}
		<option @key=":select_value" value={{ " " }} ...selected>Выберите значение</option>
	}
	
	%set Collection options = render_params["options"];
	%if (rtl::exists(options))
	{
		%for (int i=0; i<options.count(); i++)
		{
			%set Dict item = options[i];
			%set selected = {};
			%if (item["value"] == value and value !== "" and value !== null)
			{
				%set selected = { "selected": "selected" };
			}
			<option @key={ item["value"] } value={ "" ~ item["value"] } ...selected>
				{{ item["label"] }}
			</option>
		}
	}
	
	</select>
	
</template>


<script type="frontend">

/**
 * On change
 */
public void onChange(Message<ChangeEvent> msg)
{
	if (this.model_path != "")
	{
		RenderProvider provider = @.provider(classof RenderProvider);
		provider.commitComponent( this, msg.event.value );
	}
	
	ChangeEvent event = msg.event.clone({ "field_name": this.params["name"] });
	this.sendEvent(event);
}

</script>


</class>