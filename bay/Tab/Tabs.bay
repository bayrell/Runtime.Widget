<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Runtime.Widget.Tab.Tabs">

<use name="Runtime.Web.BaseModel" />
<use name="Runtime.Widget.Tab.Tab" component="true" />


<style>
.tabs{
	position: relative;
}
.tabs__header{
	display: flex;
	position: relative;
	border-bottom-width: var(--widget-border-width);
	border-bottom-color: var(--widget-color-border);
	border-bottom-style: solid;
}
.tabs__header_item{
	position: relative;
	padding: calc(1.5 * var(--widget-space));
	border-color: transparent;
	border-width: var(--widget-border-width);
	border-style: solid;
	border-bottom-width: 0px;
	text-decoration: none;
	color: inherit;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	-khtml-user-select: none;
	-ms-user-select: none;
    top: var(--widget-border-width);
}
.tabs__header_item:hover,
.tabs__header_item:visited,
.tabs__header_item:visited:hover,
.tabs__header_item:focus{
	text-decoration: none;
	color: inherit;
	box-shadow: none;
	outline: transparent;
}
.tabs__header_item--active{
	background-color: var(--widget-color-table-background);
	border-color: var(--widget-color-border);
}
.tabs__content{
	margin-top: calc(2 * var(--widget-space));
}
</style>


<template name="renderHeader">
	%for (int i=0; i<this.model.tabs.count(); i++)
	{
		%set Dict tab = this.model.tabs.get(i);
		%set string tab_name = tab["name"];
		%set string tab_label = tab["label"];
		%set string tab_href = tab["href"];
		%set bool is_active = this.model.isActive(tab_name);
		
		%if (tab_href == null)
		{
			<div class="tabs__header_item" class={{ is_active ? "tabs__header_item--active" : "" }}
				data-name={{ tab_name }}
				@event:onClick={{ this.onClick }}
			>
				{{ tab_label }}
			</div>
		}
		%else
		{
			<a class="tabs__header_item" class={{ is_active ? "tabs__header_item--active" : "" }}
				data-name={{ tab_name }} href={{ tab_href }}
			>
				{{ tab_label }}
			</a>
		}
	}
</template>


<template name="renderContent">
	%if (this.model.render_widgets)
	{
		%for (int i=0; i<this.model.tabs.count(); i++)
		{
			%set Dict tab = this.model.tabs.get(i);
			%set string tab_name = tab["name"];
			%set BaseModel tab_model = tab["model"];
			%if (tab_model)
			{
				<Tab name={{ tab_name }} @model={{ this.model }}>
					%render this.renderWidget(tab_model);
				</Tab>
			}
		}
	}
	%else
	{
		%render this.renderSlot("default");
	}
</template>


<template>
	<div class="tabs">
		<div class="tabs__header">
			%render this.renderHeader();
		</div>
		<div class="tabs__content">
			%render this.renderContent();
		</div>
	</div>
</template>


<script>

void onClick(var e)
{
	string tab_name = e.target.getAttribute("data-name");
	this.model.setActive(tab_name);
	this.emit("select", tab_name);
}

</script>


</class>