/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Crud;

use Runtime.ModelProxy;
use Runtime.Web.BaseModel;
use Runtime.Web.BaseRoute;
use Runtime.Web.Layout;
use Runtime.Widget.Form.Form;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.Table;
use Runtime.Widget.Table.TableModel;


struct CrudWidget extends BaseModel
{
	string action = "";
	string form_class_name = classof Form;
	string table_class_name = classof Table;
	
	
	/**
	 * Set action
	 */
	CrudWidget setAction(string action) => this.clone{
		"action": action,
	};
	
	
	/**
	 * Set form widget class name
	 */
	CrudWidget setFormClassName(string class_name) => this.clone{
		"form_class_name": class_name,
	};
	
	
	/**
	 * Set table widget class name
	 */
	CrudWidget setTableClassName(string class_name) => this.clone{
		"table_class_name": class_name,
	};
	
	
	/**
	 * Init widget
	 */
	async static void initWidget(ModelProxy<BaseModel> model, BaseRoute route)
	{
		string action = model.data("action");
		if (action == "index")
		{
			TableModel table = model.data(["widgets", "table"]);
			if (table == null)
			{
				route.addWidget(new TableModel{"widget_name": "table"});
			}
		}
		else if (action == "save")
		{
			FormModel form = model.data(["widgets", "form"]);
			if (form == null)
			{
				route.addWidget(new FormModel{"widget_name": "form", "action": "save"});
			}
		}
		else if (action == "delete")
		{
			FormModel form = model.data(["widgets", "form"]);
			if (form == null)
			{
				route.addWidget(new FormModel{"widget_name": "form", "action": "delete"});
			}
		}
	}
	
}
