/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Crud.Pages;

use Runtime.Serializer;
use Runtime.Web.BasePageModel;
use Runtime.Web.RenderContainer;
use Runtime.Widget.Crud.CrudFactory;


class IndexPageModel extends BasePageModel
{
	CrudFactory crud = null;
	
	
	/**
	 * Init widget settings
	 */
	void initParams(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("crud"))
		{
			this.crud = params.get("crud");
			if (this.crud instanceof Map)
			{
				Serializer serializer = new Serializer();
				serializer.setFlag(Serializer::ALLOW_OBJECTS);
				this.crud = serializer.decodeObject(this.crud);
			}
		}
	}
	
	
	/**
	 * Process frontend data
	 */
	void serialize(Serializer serializer, Map data)
	{
		if (serializer.isEncode())
		{
			serializer.process(this, "crud", data);
		}
		parent(serializer, data);
	}
	
	
	/**
	 * Build title
	 */
	void buildTitle(RenderContainer container)
	{
		this.crud.buildTitle(container);
	}
}