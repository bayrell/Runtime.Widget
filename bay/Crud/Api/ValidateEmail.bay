/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Crud.Api;

use Runtime.re;
use Runtime.BaseStruct;
use Runtime.Widget.Crud.Api.CrudApi;
use Runtime.Widget.Crud.Api.CrudRule;


struct ValidateEmail extends CrudRule
{
	string name = "";
	
	
	/**
	 * Validate field_name in item
	 */
	bool validate(string email)
	{
		if (email == null) return false;
		if (not rtl::isString(email)) return false;
		
		bool is_match = re::match("^[\w\_\-\.]+@[\w\-\.]+\.[\w]+$", email);
		if (not is_match) return false;
		
		is_match = re::match("\.[\.]+", email);
		if (is_match) return false;
		
		return true;
	}
	
	
	/**
	 * Validate item
	 */
	async Dict validateItem(CrudApi api, Dict update_data)
	{
		string email = update_data[this.name];
		
		if (not this.validate(email))
		{
			api.field_result.addFieldError(
				this.name,
				"wrong email"
			);
		}
		
		return update_data;
	}
	
	
}
