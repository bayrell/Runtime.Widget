/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Crud;

use Runtime.ModelProxy;
use Runtime.Web.RouteInfo;
use Runtime.Widget.Layout;
use Runtime.Widget.Crud.CrudWidget;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.TableModel;


struct CrudPageModel extends CrudWidget
{
	/**
	 * Init table
	 */
	async static void initTableWidget(
		ModelProxy<CrudWidget> model,
		ModelProxy<TableModel> table,
		ModelProxy<Layout> layout
	)
	{
		await parent::initTableWidget(model, table, layout);
		
		Dict request_query = layout.data("request_query");
		table.proxy("data").commit("setPage", request_query.get(table.data("page_name"), 1));
	}
	
	
	/**
	 * Init form
	 */
	async static void initFormWidget(
		ModelProxy<CrudWidget> model,
		ModelProxy<FormModel> form,
		ModelProxy<Layout> layout
	)
	{
		await parent::initFormWidget(model, form, layout);
		
		string action = model.data("action");
		
		/* Set primary key */
		if (action != "add")
		{
			RouteInfo route = layout.data("route");
			Collection primary_keys = form.proxy("fields").data("primary_keys");
			
			Map keys = new Map();
			for (int i=0; i<primary_keys.count(); i++)
			{
				string field_name = primary_keys.get(i);
				keys.setValue(field_name, route.matches.get(field_name));
			}
			
			form.proxy("data").commit("setPrimaryKey", keys.toDict());
		}
		
		/* Setup back page */
		ModelProxy page_model = layout.proxy(layout.call("getPageModelPath"));
		form.commit("setBackPage", page_model.call("getRouteHref", "index"));
		form.commit("setShowTopButtons", true);
	}
	
}
