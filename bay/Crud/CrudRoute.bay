/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Crud;

use Runtime.ModelProxy;
use Runtime.Web.BaseModel;
use Runtime.Web.BaseRoute;
use Runtime.Web.BaseWidget;
use Runtime.Web.RouteInfo;
use Runtime.Widget.Crud.CrudPageModel;
use Runtime.Widget.Crud.CrudWidget;
use Runtime.Widget.Crud.DeletePage;
use Runtime.Widget.Crud.SavePage;
use Runtime.Widget.Crud.TablePage;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.TableModel;


class CrudRoute extends BaseRoute
{
	/**
	 * Returns routes
	 */
	pure Collection<RouteInfo> getRoutes() =>
	[
	];
	
	
	/**
	 * Returns layout name
	 */
	string getLayoutName() => "default";
	
	
	/**
	 * Returns page model
	 */
	string getPageModelName() => classof CrudPageModel;
	
	
	/**
	 * Returns index page name
	 */
	string getIndexPageName() => classof TablePage;
	
	
	/**
	 * Returns save page name
	 */
	string getSavePageName() => classof SavePage;
	
	
	/**
	 * Returns delete page name
	 */
	string getDeletePageName() => classof DeletePage;
	
	
	/**
	 * Action index
	 */
	async void actionIndex()
	{
		this.page_model.commit("setAction", "index");
		
		/* Setup widget */
		await this.setupWidget();
		
		/* Set title */
		this.setPageTitle( this.page_model.call("getPageTitle", "index") );
		
		/* Render page */
		this.container.render( static::getIndexPageName() );
	}
	
	
	/**
	 * Action add
	 */
	async void actionAdd()
	{
		this.page_model.commit("setAction", "add");
		
		/* Setup widget */
		await this.setupWidget();
		
		/* Set title */
		this.setPageTitle( this.page_model.call("getPageTitle", "add") );
		
		/* Render page */
		this.container.render( static::getSavePageName() );
	}
	
	
	/**
	 * Action edit
	 */
	async void actionEdit()
	{
		this.page_model.commit("setAction", "edit");
		
		/* Setup widget */
		await this.setupWidget();
		
		/* Set title */
		this.setPageTitle( this.page_model.call("getPageTitle", "edit") );
		
		/* Render page */
		this.container.render( static::getSavePageName() );
	}
	
	
	/**
	 * Action delete
	 */
	async void actionDelete()
	{
		this.page_model.commit("setAction", "delete");
		
		/* Setup widget */
		await this.setupWidget();
		
		/* Set title */
		this.setPageTitle( this.page_model.call("getPageTitle", "delete") );
		
		/* Render page */
		this.container.render( static::getDeletePageName() );
	}
}