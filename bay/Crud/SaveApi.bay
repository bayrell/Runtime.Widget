/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Crud;

use Runtime.Exceptions.ApiError;
use Runtime.Exceptions.ItemNotFound;
use Runtime.Web.BaseApi;
use Runtime.Widget.Crud.CrudService;
use Runtime.Widget.Crud.FieldException;


class SaveApi extends BaseApi
{
	/**
	 * Returns service
	 */
	CrudService createService() => null;
	
	
	/**
	 * Returns item fields
	 */
	Collection getItemFields() =>
	[
	];
	
	
	/**
	 * Build error
	 */
	void buildError(CrudService service)
	{
		/* Check if item is exists */
		if (not service.item)
		{
			throw new ApiError(new ItemNotFound());
		}
		
		/* Validate error */
		if (not service.rules.correct())
		{
			throw new ApiError( new FieldException() );
		}
	}
	
	
	/**
	 * Build result
	 */
	async void buildResult(CrudService service)
	{
		if (not service.item) return;
		
		/* Convert item */
		Collection fields = this.getItemFields();
		Dict item = service.convertItem(service.item, fields);
		Dict pk = service.getPrimaryKey(service.item);
		
		/* Setup result */
		this.result.data.set("pk", pk);
		this.result.data.set("item", item);
		this.result.data.set("fields", service.rules.getFields());
		
		/* Success */
		this.success();
	}
	
	
	/**
	 * Action item
	 */
	async void actionItem()
	{
		/* Create service */
		CrudService service = this.createService();
		
		/* Load item */
		Dict pk = this.post_data.get("pk");
		await service.loadItem(pk);
		
		/* Build result */
		this.buildError(service);
		this.buildResult(service);
		
		/* Build result */
		await service.buildItemResult(this.result);
	}
	
	
	/**
	 * Action save
	 */
	async void actionSave()
	{
		/* Create service */
		CrudService service = this.createService();
		
		/* Get data */
		Dict pk = this.post_data.get("pk");
		Dict data = this.post_data.get("data");
		
		/* Save */
		await service.save(pk, data);
		
		/* Build error */
		this.buildError();
		
		/* Build result */
		service.buildItemResult(this.result);
	}
	
	
	/**
	 * Action delete
	 */
	async void actionDelete()
	{
		/* Create service */
		CrudService service = this.createService();
		
		/* Delete */
		Dict pk = this.post_data.get("pk");
		await service.delete(pk);
		
		/* Build error */
		this.buildError();
		
		/* Build result */
		service.buildItemResult(this.result);
	}
}